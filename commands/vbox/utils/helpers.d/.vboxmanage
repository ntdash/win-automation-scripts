#! /usr/bin/env bash

vboxmanage ()
{
   "${vboxmanage_exec_path}" $@
}

load_available_vms_names()
{
   $(is_assoc_array available_vms_names) && return 0

   declare -xAg available_vms_names=()

   declare name= id=
   while read name id
   do
      if [[ -n $name ]]
      then
         available_vms_names[$name]="$id"
      fi
   done <<< "$(vboxmanage list vms | sed 's/[{"\""}]//g')"

}

load_running_vms_names()
{
   $(is_assoc_array running_vms_names) && return 0

   declare -xAg running_vms_names=()

   declare name= id=
   while read name id
   do
      if [[ -n $name ]]
      then
         running_vms_names[$name]="$id"
      fi
   done <<< "$(vboxmanage list runningvms | sed 's/[{"\""}]//g')"
}


start_vm()
{
   declare -i rcode=0

   vboxmanage startvm ${1:-$vname} --type headless 2> /dev/null

   rcode=$?

   if [[ $rcode -eq 0 ]]
   then
      set_attr state running
      save_vm_config
   fi

   return $rcode
}

stop_vm()
{
   echo "Closing virtual machine [\"${vname}\"]..."

   declare -i rcode=0

   vboxmanage controlvm ${1:-$vname} poweroff

   rcode=$?

   if [[ $rcode -eq 0 ]]
   then
      set_attr state idle
      save_vm_config
   fi

   return $rcode

}

is_vm_running()
{
   load_running_vms_names

   key_exists_in ${1:-$vname} running_vms_names

   return $?
}

declare -xf vboxmanage

declare -xf load_available_vms_names
declare -xf load_running_vms_names

declare -xf is_vm_running

declare -xf start_vm
declare -xf stop_vm
