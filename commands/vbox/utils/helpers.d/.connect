connect_to_vm()
{
	# load config
	load_vm_config

	# possible variable
	declare -a pv_table=('user' 'host')
	declare table_updated='false' attr=

	for attr in ${pv_table[@]}
	do
		declare ${attr}="${parsed_config[$attr]}"
		declare -n ref=$attr

		if [[ -z $ref ]] || [[ "${ref}" == ":${attr}" ]]
		then
			echo "Attribute [\"$attr\"] not defined. Will you want to define one ? [Y/n]"

			declare choice='y'
			read -p '> ' choice

			choice=${choice:-'y'}

			if [[ ! "${choice}" =~ [yY] ]]
			then
				r_quit 1 "Aborting..."
			fi

			ref=${choice}
			table_updated="true"
		fi
	done

	# persit any change
	if [[ "${table_updated}" == "true" ]]
	then
		save_vm_config
	fi

	declare -i rcode=0

	echo -e "Trying connecting through ssh with:\nHost: ${host}\nUser: ${user}\n..."

	# ping vm ip

	declare -i duration=0 retry=5

	while sleep $duration
	do
		ping -n 1 -w 500 $host > /dev/null

		[[ $? -eq 0 ]] && break

		if [[ $retry -le 0 ]]
		then
			r_quit 1 "Failed to reach out to virtual machine [\"${vname}\"]'s network after 5 attempt."
			break
		fi

		# increase by number a retry left
		duration+=$retry

		# decrease number of retry
		retry+=-1
	done

	# on-success connect to it
	ssh -l $user $host 2> /dev/null

	[[ $? -ne 0 ]] && r_quit 1 "Failed to connect to virtual machine [\"${vname}\"]."

	echo "Closing connection to [\"${vname}\"]..."

	return $rcode
}

declare -xf connect_to_vm
