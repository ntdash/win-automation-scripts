#! /usr/bin/env bash

# error
[[ $# -lt 1 ]] && $(helper "Subcommand not specified.") && exit

[[ $# -eq 1 ]] && [[ "$1" != "--" ]] && echo "Missing Virtual Machine Name." && exit

declare sub_cmd_name= sub_cmd_exec= options=
declare -i opt_id

# resolve [--] short hand
if [[ "$1" == "--" ]]
then
	set -- raw -q -- ${@:2}
else
	declare vname

	# Ps: parentheses prevent $end from muttating regardless of $2 being a possible $vname
	[[ ! "$2" =~ ^\s*- ]] && vname=$2 || (vname=${@: -1} && end=true)

	[[ "$vname" =~ ^\s*- ]] && echo "Failed to retrieve Virtual Machine Name" && exit

	declare -xg vname

	if [[ $# -ge 3 ]]
	then
		[[ -n $end ]] && set -- ${@:1: $(($# -1))} || set -- $1 ${@:3}
	else
		set -- $1
	fi

fi

# assign subcommand name
sub_cmd_name=$1

# assign left arguments to options
[[ $# -ge 2 ]] && options="${@:2}" || options=

# form subcommand exec pathname
resolved_path="${sub_cmd_pathname}/${sub_cmd_name}"
sub_cmd_exec="${resolved_path}/.exec"

# throw error if not exec file not found
[[ ! -f $sub_cmd_exec ]] && echo "Subcommand \"${sub_cmd_name}\" not found" && exit 1

# check if options is provided and parse it
[[ -n $options ]] && options_parser $options

# export sub_command_path
declare -x cwd=$resolved_path

# execute subcommand
bash $sub_cmd_exec

